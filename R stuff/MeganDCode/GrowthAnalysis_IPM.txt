#GET AND ORGANIZE THE DATA

rm(list=ls(all=TRUE)) ## Clear all

setwd("~/MJD/Projects/CAMEO/Rstuff") #set working directory to location of this script & data file

getwd() #check working directory is set properly

#read in data
data<-read.table("sortdata_13Jan2012.txt", sep="\t", header=TRUE)#read in data

#create site names
sitenametable<-c("HonN",
                 "HonS",
                 "Molo",
                 "Puam",
                 "Kahe",
                 "KanB",
                 "KanP",
                 "Maal",
                 "Olow",
                 "Papa")
sitetable<-c("Honolua",
             "Honolua",
             "Molokini",
             "Puamana",
             "Kahekili",
             "Kanahena",
             "Kanahena",
             "Maalaea",
             "Olowalu",
             "Papaula")
data$site<-sitetable[charmatch(data$sitename,sitenametable)]
data$site<-factor(data$site)
data$quad<-factor(paste("Q",data$quad,sep=""))

#create transect names
data$trans <- as.character(data$depthname)
data <- within(data,trans[sitename=="HonS"]<-"S")
data <- within(data,trans[sitename=="HonN"]<-"N")
data$trans <-factor(data$trans)

#create unique names for transect, quad, and colony
data$utrans<-factor(paste(data$site,data$trans,sep="."))
data$uquad <-factor(paste(data$utrans,data$quad,sep="."))
data$ucolony <-factor(paste(data$utrans,data$quad,data$species,data$colony,sep="."))

#add max wave height to each transect
wavedata<-read.table("WaveValuesMaui_Import.txt", sep="\t", header=TRUE)#read in wave data
data$avgWH <- wavedata$avgWH[match(data$utrans,wavedata$transect)]
data$maxWH <- wavedata$maxWH[match(data$utrans,wavedata$transect)]

#make year a factor
data$fyear_t<-factor(data$year_t)
data$fyear_t1<-factor(data$year_t1)                          

#create some additional variables using logical conditions on fate
data$surv = NA   #SURVIVAL
  data <- within(data,surv[fate_t1!="D"]<-1) #if you're not dead, you survived'
  data <- within(data,surv[fate_t1=="D"]<-0) #if you're dead, you're dead
  data <- within(data,surv[fate_t1=="R"|fate_t1=="N"]<-NA) #don't count if new recruit
data$fiss = NA   #FISSION
  data <- within(data,fiss[fate_t1=="I"|fate_t1=="M"]<-1)
  data <- within(data,fiss[fate_t1!="I" & fate_t1!="M"]<-0)
  data <- within(data,fiss[fate_t1=="R"|fate_t1=="N"]<-NA) #don't count if new recruit
data$fuse = NA   #FUSION
  data <- within(data,fuse[fate_t1=="U"|fate_t1=="M"]<-1)
  data <- within(data,fuse[fate_t1!="U" & fate_t1!="M"]<-0)
  data <- within(data,fuse[fate_t1=="R"|fate_t1=="N"]<-NA) #don't count if new recruit

#create some size & growth measures
data$lnarea_t<-log(data$area_t)
data$lnarea_t1<-log(data$area_t1)
data$lnperi_t <-log(data$peri_t)
data$lnperi_t1 <-log(data$peri_t1)
data$logarea_t<-log10(data$area_t)
data$logarea_t1<-log10(data$area_t1)


data$PAratio<-data$peri_t/data$area_t
data$grArea<-log(data$area_t1/data$area_t)
data$grPeri<-log(data$peri_t1/data$peri_t)
data$grPAR<-log((data$area_t1/data$peri_t1)/(data$area_t/data$peri_t))
data$grDel <- data$area_t1-data$area_t
data$grPct<-100*data$grDel/data$area_t
data$grRatio<-data$area_t1/data$area_t
  
#check format of data
  str(data) #check structure of data and variables
#check which sites should be excluded for which species b/c too few colonies
  table(data$utrans,data$species)


#create separate dataframes for three most abundant species
#exclude 2-year observations
#exclude transects with fewer than 20 growth observations
MC<-subset(data,(species=="MC" & !skipyear & site!="Kanahena" & site!="Papaula" & utrans!="Puamana.13m"))
PL<-subset(data,(species=="PL" & !skipyear & utrans!="Kanahena.10m" & utrans!="Olowalu.07m"))
PC<-subset(data,(species=="PC" & !skipyear & utrans!="Honolua.S" & utrans!="Olowalu.07m" & utrans!="Papaula.03m"))

#data for GROWTH model, "S" only (excludes fission, fusion)
MCg<-subset(MC,(fate_t1=="S"))
PLg<-subset(PL,(fate_t1=="S"))
PCg<-subset(PC,(fate_t1=="S"))

#Model growth with linear mixed-effects model in nlme
library(nlme) 

#Some data exploration
pairs(~grArea+lnarea_t+spcover_t+allcover_t+depth+maxWH,data=MCg)

#Plots of fullest model by utrans
grMC_FF.list<-lmList(grArea ~ lnarea_t + allcover_t*depth*maxWH|utrans,MCg,na.action=na.pass)
plot(intervals(grMC_FF.list))

#Fullest possible fixed effect model includes:#indiv area, total coral cover, depth, max wave height
#Note that depth is a transect characteristic and maxWH is a site characteristic

#model for growth, fullest fixed model 
    #use gls to get REML fit for model comparison
grMC_FF <-  gls(grArea~lnarea_t*allcover_t*depth*maxWH,method="REML",data=MCg)

#use lm to fit and get nice residual plots
grMC_FFlm <-  lm(grArea~lnarea_t*allcover_t*depth*maxWH,data=MCg)
  E_MC<-rstandard(grMC_FFlm)
  boxplot(E_MC~utrans,data=MCg)  #standardized residuals by transect
  boxplot(E_MC~uquad,data=MCg)   #standardized residuals by quadrat
  boxplot(E_MC~uquad+year_t,data=MCg)  #standardized residuals by quad/year

  #check residuals for fullest fixed model
  plot(grMC_FFlm,which=1:6,id.n=5,labels.id=paste(MCg$year_t,MCg$ucolony,sep="."))
  plot(fitted(grMC_FFlm),resid(grMC_FFlm))
  plot(MCg$grArea,fitted(grMC_FFlm))
  plot(MCg$grArea,resid(grMC_FFlm))

#Would it be better to model growing and shrinking colonies separately?
MCgp<-subset(MCg,grArea>=0)
MCgn<-subset(MCg,grArea<0)

#Or better to analyze two different size groups?
sizethr<-12
MCgs<-subset(MCg,area_t<12)
MCgl<-subset(MCg,area_t>=12)
table(MCgs$utrans)
table(MCgl$utrans)
pairs(~grArea+lnarea_t+spcover_t+allcover_t+depth+maxWH,data=MCgs)
pairs(~grArea+lnarea_t+spcover_t+allcover_t+depth+maxWH,data=MCgl)

grsMC_FFlm <- lm(grArea~lnarea_t*allcover_t*depth*maxWH,data=MCgs)
grlMC_FFlm <- lm(grArea~lnarea_t*allcover_t*depth*maxWH,data=MCgl)

#fit best random effects model
lmc<-lmeControl(niter=10000,msMaxIter=10000)
grsMC_RE1 <-lme(grArea~lnarea_t*allcover_t*depth*maxWH,
               random=~1+year_t|utrans/uquad,data=MCgs, control=lmc)





#fit best random effects model
lmc<-lmeControl(niter=10000,msMaxIter=10000)
grMC_RE1 <-lme(grArea~lnarea_t*spcover_t*allcover_t*depth,
               random=~1+year_t|utrans/uquad,data=MCg, control=lmc)

grMC_RE2 <-lme(grArea~lnarea_t*spcover_t*allcover_t*depth,
               random=~1+year_t+lnarea_t+spcover_t|utrans,data=MCg)
grMC_RE3 <-lme(grArea~lnarea_t*spcover_t*allcover_t*depth,
               random=~1+year_t+lnarea_t+allcover_t|utrans,data=MCg)
grMC_RE4 <-lme(grArea~lnarea_t*spcover_t*allcover_t*depth,
               random=~1+year_t+spcover_t+allcover_t|utrans,data=MCg)
grMC_RE5 <-lme(grArea~lnarea_t*spcover_t*allcover_t*depth,
               random=~1+lnarea_t+spcover_t+allcover_t|utrans,data=MCg)

grMC_RE6 <-lme(grArea~lnarea_t*spcover_t*allcover_t*depth,
               random=~1+year_t+lnarea_t|utrans,data=MCg,control=lmc)
grMC_RE7 <-lme(grArea~lnarea_t*spcover_t*allcover_t*depth,
               random=~1+year_t+spcover_t|utrans,data=MCg)
grMC_RE8 <-lme(grArea~lnarea_t*spcover_t*allcover_t*depth,
               random=~1+year_t+allcover_t|utrans,data=MCg)
grMC_RE9 <-lme(grArea~lnarea_t*spcover_t*allcover_t*depth,
               random=~1+lnarea_t+spcover_t|utrans,data=MCg)
grMC_RE10<-lme(grArea~lnarea_t*spcover_t*allcover_t*depth,
               random=~1 +lnarea_t+allcover_t|utrans,data=MCg)
grMC_RE11<-lme(grArea~lnarea_t*spcover_t*allcover_t*depth,
               random=~1+spcover_t+allcover_t|utrans,data=MCg)

grMC_RE12<-lme(grArea~lnarea_t*spcover_t*allcover_t*depth,
               random=~1+year_t|utrans,data=MCg)
grMC_RE13<-lme(grArea~lnarea_t*spcover_t*allcover_t*depth,
               random=~1+lnarea_t|utrans,data=MCg, control=lmc)
grMC_RE14<-lme(grArea~lnarea_t*spcover_t*allcover_t*depth,
               random=~1+spcover_t|utrans,data=MCg)
grMC_RE15<-lme(grArea~lnarea_t*spcover_t*allcover_t*depth,
               random=~1+allcover_t|utrans,data=MCg)

grMC_RE16<-lme(grArea~lnarea_t*spcover_t*allcover_t*depth,
               random=~1|utrans,data=MCg, control=lmc)

anova(grMC_FF,grMC_RE16,grMC_RE15,grMC_RE14,grMC_RE13,grMC_RE12,grMC_RE11,grMC_RE10,grMC_RE9,
      grMC_RE8,grMC_RE7,grMC_RE6,grMC_RE5,grMC_RE4,grMC_RE3,grMC_RE2,grMC_RE1)
anova(grMC_RE15,grMC_RE16)
anova(grMC_FF,grMC_RE16)
anova(grMC_FF,grMC_RE15)
#USE 15:  15 is best by AIC; FF then 16 (then 15) best by BIC; 
#LRT: 15 better than 16 (p=0.024) and 15 better than FF (p=0.035)
# REs:  utrans Intercept + utrans:allcover_t slope 

###Step 3: Using most parsimonious Random Effects model, return to the fixed effects

grMC_RE15_F1<-lme(grArea~lnarea_t*spcover_t*allcover_t*depth,
               random=~1+allcover_t|utrans,data=MCg,method="ML")
summary(grMC_RE15_F1)
  #remove lnarea_t:allcover_t:depth
grMC_RE15_F2<-lme(grArea~lnarea_t*spcover_t*allcover_t*depth 
                  - lnarea_t:allcover_t:depth,
               random=~1+allcover_t|utrans,data=MCg,method="ML")
summary(grMC_RE15_F2)
  #remove spcover_t:depth
grMC_RE15_F3<-lme(grArea~lnarea_t*spcover_t*allcover_t*depth 
                  - lnarea_t:allcover_t:depth 
                  - lnarea_t:spcover_t:allcover_t:depth,
               random=~1+allcover_t|utrans,data=MCg,method="ML")
summary(grMC_RE15_F3)
  #remove spcover_t:allcover_t, lnarea_t:spcover_t:allcover_t
  
grMC_RE15_F4<-lme(grArea~lnarea_t*spcover_t*allcover_t*depth
                  - lnarea_t:allcover_t:depth 
                  - lnarea_t:spcover_t:allcover_t:depth
                  - spcover_t:allcover_t 
                  - lnarea_t:spcover_t:allcover_t,
               random=~1+allcover_t|utrans,data=MCg,method="ML")
summary(grMC_RE15_F4)
  #-lnarea_t:allcover_t
grMC_RE15_F5<-lme(grArea~lnarea_t*spcover_t*allcover_t*depth
                  - lnarea_t:allcover_t:depth 
                  - lnarea_t:spcover_t:allcover_t:depth
                  - spcover_t:allcover_t 
                  - lnarea_t:spcover_t:allcover_t
                  - lnarea_t:allcover_t,
               random=~1+allcover_t|utrans,data=MCg,method="ML")
summary(grMC_RE15_F5)
  #-lnarea_t:depth
grMC_RE15_F6<-lme(grArea~lnarea_t*spcover_t*allcover_t*depth
                  - lnarea_t:allcover_t:depth 
                  - lnarea_t:spcover_t:allcover_t:depth
                  - spcover_t:allcover_t 
                  - lnarea_t:spcover_t:allcover_t
                  - lnarea_t:allcover_t
                  - lnarea_t:depth,
               random=~1+allcover_t|utrans,data=MCg,method="ML")
summary(grMC_RE15_F6)
  #higherst p is spcover_t (p=0.211) but some interactions w spcover are sig
  #remove lnarea_t:spcover_t
grMC_RE15_F7<-lme(grArea~lnarea_t*spcover_t*allcover_t*depth
                  - lnarea_t:allcover_t:depth 
                  - lnarea_t:spcover_t:allcover_t:depth
                  - spcover_t:allcover_t 
                  - lnarea_t:spcover_t:allcover_t
                  - lnarea_t:allcover_t
                  - lnarea_t:depth
                  - lnarea_t:spcover_t,
                  random=~1+allcover_t|utrans,data=MCg,method="ML")
summary(grMC_RE15_F7)
  #remove lnarea_t:spcover_t:depth 
grMC_RE15_F8<-lme(grArea~lnarea_t*spcover_t*allcover_t*depth
                  - lnarea_t:allcover_t:depth 
                  - lnarea_t:spcover_t:allcover_t:depth
                  - spcover_t:allcover_t 
                  - lnarea_t:spcover_t:allcover_t
                  - lnarea_t:allcover_t
                  - lnarea_t:depth
                  - lnarea_t:spcover_t
                  - lnarea_t:spcover_t:depth,
                  random=~1+allcover_t|utrans,data=MCg,method="ML")
summary(grMC_RE15_F8)
  #remove spcover_t       
grMC_RE15_F9<-lme(grArea~lnarea_t+spcover_t*allcover_t*depth
                  - spcover_t:allcover_t 
                  - spcover_t,
                  random=~1+allcover_t|utrans,data=MCg,method="ML")
summary(grMC_RE15_F9)
grMC_RE15_F10<-lme(grArea~lnarea_t+spcover_t*allcover_t*depth
                  - spcover_t:allcover_t 
                  - spcover_t
                   spcover_t:allcover_t:depth,
                  random=~1+allcover_t|utrans,data=MCg,method="ML")
summary(grMC_RE15_F10)
anova(grMC_RE15_F10,grMC_RE15_F9,grMC_RE15_F8,grMC_RE15_F7,grMC_RE15_F6,
      grMC_RE15_F5,grMC_RE15_F4,grMC_RE15_F3,grMC_RE15_F2,grMC_RE15_F1)
##Model F9 is best 

grMC_RE15_F9reml=update(grMC_RE15_F9,method="REML")